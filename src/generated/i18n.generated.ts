/* DO NOT EDIT, file generated by nestjs-i18n */

import { Path } from "nestjs-i18n";
export type I18nTranslations = {
    "account": {
        "validations": {
            "first_name_must_be_string": string;
            "first_name_not_empty": string;
            "last_name_must_be_string": string;
            "last_name_not_empty": string;
        };
        "errors": {
            "not_found": string;
            "photo_not_found": string;
        };
    };
    "agreement": {
        "errors": {
            "not_found": string;
            "already_accepted": string;
        };
    };
    "auth": {
        "validations": {
            "login_cannot_be_empty": string;
            "login_must_be_string": string;
            "password_cannot_be_empty": string;
            "password_must_be_string": string;
            "password_length": string;
            "confirmation_code_cannot_be_empty": string;
        };
        "errors": {
            "already_exists": string;
            "too_many_registration_attempts": string;
            "too_many_reset_attempts": string;
            "invalid_credentials": string;
            "send_email_error": string;
            "not_found": string;
            "confirmation_code_expired": string;
            "confirmation_code_invalid": string;
            "invalid_token": string;
            "invalid_refresh_token": string;
            "need_auth": string;
            "reset_code_expired": string;
            "reset_code_invalid": string;
            "new_password_invalid": string;
            "only_drivers_allowed": string;
            "only_organizers_allowed": string;
            "too_many_signin_attempts": string;
        };
        "mail": {
            "confirmation_email": {
                "subject": string;
                "text": string;
            };
            "reset_password_email": {
                "subject": string;
                "text": string;
            };
        };
    };
    "championship": {
        "errors": {
            "not_found": string;
            "rules_not_found": string;
            "image_not_found": string;
        };
    };
    "driver": {
        "errors": {
            "not_found": string;
            "photo_not_found": string;
            "driver_exists": string;
            "duplicated_need_organizer_attention": string;
            "already_created": string;
            "driver_with_such_email_has_account": string;
        };
    };
    "driver_document": {
        "errors": {
            "not_found": string;
            "already_added": string;
            "used_in_ongoing_events": string;
        };
    };
    "errors": {
        "common_error": string;
    };
    "event": {
        "errors": {
            "not_found": string;
            "image_not_found": string;
            "registration_unavailable": string;
            "not_registered": string;
            "already_registered": string;
            "missed_documents": string;
            "rules_not_found": string;
            "wrong_classes": string;
            "no_classes": string;
            "event_finished": string;
            "status_cant_be_changed": string;
            "road_condition_cant_be_changed": string;
            "status_already_set": string;
            "event_member_not_found": string;
            "event_started_registration_can_not_be_changed": string;
            "event_finished_registration_can_not_be_changed": string;
            "start_num_exists": string;
        };
        "mail": {
            "organizer_notification": {
                "subject": string;
                "text": string;
            };
        };
    };
    "location": {
        "errors": {
            "not_found": string;
            "photo_not_found": string;
        };
    };
    "tires": {
        "errors": {
            "not_found": string;
            "is_event_member": string;
            "already_added": string;
        };
    };
    "validations": {
        "not_be_empty": string;
        "email_must_be_email": string;
        "must_be_string": string;
        "must_be_integer": string;
        "must_be_number": string;
        "min_value": string;
    };
    "vehicle": {
        "validations": {
            "image_too_big": string;
        };
        "errors": {
            "vehicle_name_exists": string;
            "vehicle_not_found": string;
            "photo_not_found": string;
            "is_event_member": string;
        };
    };
};
export type I18nPath = Path<I18nTranslations>;
